'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 30 March 2023 at 2:07:30 pm'!!ScratchFrameMorph methodsFor: 'microwitch'!connectMicrobit	| list menu selection pair |	scriptsPane thumbnailOff.	list _ mpboard portNames sort.	list isEmpty ifTrue: [^ DialogBoxMorph inform: 'no micro:bit found' localized].	list size = 1		ifTrue: [selection _ list first]		ifFalse: 			[menu _ CustomMenu new.			list do: [:each | menu add: each action: each].			selection _ menu startUp.			selection ifNil: [^ self]].	self connectPort: selection		ifConnectedDo: 			[scriptsPane thumbnailOn.			^ self].	pair _ self firmwarePathByManually: true ifFail: [:str | ^ DialogBoxMorph inform: str].	(DialogBoxMorph ask: 'initialize micro:bit?' localized)		ifFalse: [^ self].	self writeString: pair first as: pair second.	DialogBoxMorph inform: 'initializing micro:bit done, please re-send scripts' localized! !!ScratchFrameMorph methodsFor: 'microwitch'!detailsFilename	^ 'DETAILS.TXT'! !!ScratchFrameMorph methodsFor: 'microwitch'!firmwarePathByManually: aBoolean ifFail: aBlock 	| path ver id firmware |	path _ MicrowitchPlugin microbitDevice.	path		ifNil: [aBoolean ifTrue: [path _ self microbitPathByUser]].	path		ifNil: 			[aBlock value: 'no micro:bit found' localized.			^ nil].	id _ self getMicrobitIDFrom: path , FileDirectory pathNameDelimiter asString , self detailsFilename.	ver _ self microbitVersionForID: id.	path _ path , FileDirectory pathNameDelimiter asString , 'firmware.hex'.	MicrobitCode readFirmware.	firmware _ MicrobitCode firmwareFor: ver.	firmware		ifNil: 			[aBlock value: 'unable to find the appropriate firmware' localized.			^ nil].	^ Array with: firmware with: path! !!ScratchFrameMorph methodsFor: 'microwitch'!microbitMenu: aMenuTitleMorph 	| menu |	menu := CustomMenu new.	menu add: 'Send to micro:bit' action: #sendMicroPythonScript.	mpboard isConnecting		ifTrue: [menu add: 'Disconnect from micro:bit' action: #disconnectMicrobit]		ifFalse: [menu add: 'Connect to micro:bit' action: #connectMicrobit].	menu addLine.	menu add: 'initialize micro:bit' action: #uploadFirmware.	menu add: 'show python code' action: #showPythonProgram.	Sensor shiftPressed		ifTrue: 			[menu addLine.			menu add: 'inspect' action: #inspect].	menu addLine.	menu add: 'About micro:witch' action: #aboutScratch.	menu localize.	menu invokeOn: self at: aMenuTitleMorph bottomLeft + (0 @ 10)! !!ScratchFrameMorph methodsFor: 'microwitch'!microbitPathByUser	| path |	path := ScratchFileChooserDialog				chooseExistingFileType: #microbit				extensions: #(#txt #TXT )				title: 'Select micro:bit folder'.	path = #cancelled ifTrue: [^ nil].	(path endsWith: self detailsFilename)		ifFalse: [^ nil].	^ (FileDirectory on: path) parentDirectory pathName! !!ScratchFrameMorph methodsFor: 'microwitch'!uploadFirmware	| pair |	self stopAll.	self closeMediaEditorsAndDialogs ifFalse: [^ self].	pair := self firmwarePathByManually: true ifFail: [:str | ^ DialogBoxMorph inform: str].	(DialogBoxMorph ask: 'initialize micro:bit?' localized)		ifFalse: [^ self].	self writeString: pair first as: pair second! !!ScratchFrameMorph methodsFor: 'microwitch'!writeString: aString as: pathName 	| f dir fName dialog |	dir _ FileDirectory default.	FileDirectory splitName: pathName		to: 			[:dir2 :name | 			fName _ name.			dir2 isEmpty ifFalse: [dir _ FileDirectory on: dir2]].	(dir fileExists: fName)		ifTrue: [dir deleteFileNamed: fName].	f _ StandardFileStream fileNamed: pathName.	f ifNil: [^ self].	dialog _ DialogBoxMorph new title: '';			 message: 'sending ...' localized.	dialog openInWorld; centerOnScreen.	self world doOneCycle.		[f nextPutAll: aString.	f close]		ifError: [:err :rcvr | rcvr].	dialog delete! !ScratchFrameMorph removeSelector: #firmwarePathByUser!ScratchFrameMorph removeSelector: #updateFirmware!