'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 30 April 2023 at 6:07:58 pm'!DividedImageFrameMorph subclass: #ScratchScriptEditorMorph	instanceVariableNames: 'thumbnailMorph nameMorph pageViewerMorph readoutMorphs currentCategory tabPaneMorph goButton stopButton currentTab target '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-UI-Panes'!!ScratchFrameMorph methodsFor: 'other'!view: aMorph tab: t category: c	"Add given morph to the work pane and view it."	scriptsPane target: aMorph.	scriptsPane currentTab: t.	viewerPane		target: aMorph;		currentCategory: c.! !!ScratchFrameMorph methodsFor: 'file read/write'!installNewProject: newWorkpane	"Called after creating or reading a new project to clear the process scheduler, pick an object to view, clear the library thumbnails, and perform other housekeeping."	| viewTarget sb |	self stopAll.	newWorkpane class = ScratchStageMorph		ifFalse: [^ self inform: 'Incompatible Scratch file format'].	"self exitScratchSession."	workPane scratchServer ifNotNil: [		workPane scratchServer clearCaches.		workPane scratchServer stage: newWorkpane.		newWorkpane scratchServer: workPane scratchServer].	newWorkpane isQuarterSize: workPane isQuarterSize.	newWorkpane bounds: workPane bounds.	"newWorkpane midiPortNum: workPane midiPortNum.	workPane closeMIDI."	"use the same sensorboard for the new project"	sb _ workPane sensorBoard.	newWorkpane submorphs do: [:m |		(m isKindOf: SensorBoardMorph) ifTrue: [			sb position: m position.			newWorkpane replaceSubmorph: m by: sb.			sb tryToOpenPort]].	newWorkpane sensorBoard: sb.	"workPane owner replaceSubmorph: workPane by: newWorkpane."	workPane _ newWorkpane.	workPane frameMorph: self.	self fixByteReversedSounds.	"fix sprite positions (backward compatability)"	workPane submorphs do: [:m |		(m isKindOf: WatcherMorph) ifTrue: [m convertFromOldWatcher].		(m respondsTo: #costume) ifTrue: [			m position: m position + m costume rotationCenter]. "fix up positions"		m layoutChanged].	workPane layoutChanged.	"reset timer"	ScriptableScratchMorph resetTimer.	"pick an object view, or view the background if there is no other"	viewTarget _ workPane.	workPane submorphs do: [:m |		(m respondsTo: #scripts) ifTrue: [			m scripts size >= viewTarget scripts size ifTrue: [viewTarget _ m]]].	"viewTarget viewBlocksAndScripts."	self viewBlocksAndScriptsFor: viewTarget.	"populate the sprites list if it is empty (backward compatability)"	workPane sprites isEmpty ifTrue: [		workPane submorphs do: [:m |			(m isKindOf: ScriptableScratchMorph) ifTrue: [workPane sprites addLast: m]]].	scriptsPane currentTab: 'Scripts'.	libraryPane clearLibrary.	workPane clearPenTrails.	self updateProjectName.	ScratchProcess blockHighlightMSecs: 1.	ScratchPrompterMorph clearLastAnswer.	(projectInfo at: 'isHosting' ifAbsent: [false]) ifTrue: [		self enableRemoteSensors].	(projectInfo at: 'hasMotorBlocks' ifAbsent: [false]) ifTrue: [		self showMotorBlocks].	(projectInfo includesKey: 'penTrails') ifTrue: [		workPane penTrailsForm: (projectInfo at: 'penTrails')].	Clipboard _ nil.	World cleanseStepList.  "make sure garbage collect can clean up the old sprites"	Smalltalk garbageCollect.  "get rid of old sprite instances"	self world ifNotNil: [self world startSteppingSubmorphsOf: self].	ScriptableScratchMorph scratchOrigin: workPane center.	justSaved _ true.! !!ScratchFrameMorph methodsFor: 'file read/write'!writeScratchProject	"Write this Scratch project to the file named projectFile in the project directory. Called by saveScratchProject."	| oldScriptsTarget oldTab oldViewerCategory oldPosition saveError out |	self stopAll.	self world ifNotNil: [self world activeHand newKeyboardFocus: nil].  "terminates active editor"	"share duplicate sounds and images"	self canonicalizeSoundsBits: nil saveOriginal: false.	self canonicalizeImagesQuality: nil saveOriginal: false.	oldScriptsTarget _ scriptsPane target.	oldTab _ scriptsPane currentTab.	oldViewerCategory _ viewerPane currentCategory.	scriptsPane target: nil.	workPane updateSpritesList.	oldPosition _ workPane position.	workPane delete; position: 0@0.	self updatePenPositions.	ScriptableScratchMorph buildBlockSpecDictionary.	workPane allMorphsDo: [:m |		(m isKindOf: ScriptableScratchMorph) ifTrue: [			m blocksBin allMorphsDo: [:b |				(b isKindOf: BlockMorph) ifTrue: [b stop]].			m convertStacksToTuples]].	saveError _ nil.	[	out _ FileStream newFileNamed: (projectDirectory unusedNameStartingWith: 'tmp').		out			ifNil: [saveError _ 'Folder may be locked or read-only']			ifNotNil: [				out binary.				out nextPutAll: 'ScratchV02' asByteArray.				self storeProjectInfoOn: out.				ObjStream new storeObj: workPane on: out.				out close].	] ifError: [:err :rcvr |		out ifNotNil: [			[	out close.				projectDirectory deleteFileNamed: out localName.			] ifError: []].  "clean up, ignoring any errors"		saveError _ err].	workPane allMorphsDo: [:m |		(m isKindOf: ScriptableScratchMorph) ifTrue: [			m convertTuplesToStacks]].	"self addMorph: (workPane position: oldPosition)."	oldScriptsTarget ifNil: [oldScriptsTarget _ workPane].	self viewBlocksAndScriptsFor: oldScriptsTarget.	scriptsPane currentTab: oldTab.	viewerPane currentCategory: oldViewerCategory.	self updatePenPositions.	saveError		ifNil: [			justSaved _ true.			self updateProjectName.			projectDirectory deleteFileNamed: projectName.			[projectDirectory rename: out localName toBe: projectName]				ifError: [^ self inform: 'Save failed' withDetails: 'Is the folder read-only?' localized].			projectDirectory setMacFileNamed: projectName type: 'STsb' creator: 'MITS']		ifNotNil: [			projectName _ ''.			self inform: 'Save failed' withDetails: saveError].! !!ScratchFrameMorph methodsFor: 'private'!rebuildUIForNewLanguage	"Rebuild my UI after the language or font has been changed."	World fullRepaintNeeded.	viewerPane rebuildCategorySelectors.	self updatePanes.	self		view: scriptsPane target		tab: scriptsPane currentTab		category: viewerPane currentCategory.! !!ScratchFrameMorph methodsFor: 'private'!setLanguage: aString	"Set my language and update my blocks."	| tempJustSaved |	tempJustSaved _ justSaved.	(workPane submorphs copyWith: workPane) do: [:m |		(m isKindOf: ScriptableScratchMorph) ifTrue: [			m convertStacksToTuples]].	ScratchTranslator setLanguage: (ScratchTranslator isoCodeForName: aString).	viewerPane rebuildCategorySelectors.	(workPane submorphs copyWith: workPane) do: [:m |		(m isKindOf: ScriptableScratchMorph) ifTrue: [			m convertTuplesToStacks]].	self updatePanes.	self		view: scriptsPane target		tab: scriptsPane currentTab		category: viewerPane currentCategory.	justSaved _ tempJustSaved.! !!ScratchFrameMorph methodsFor: 'private'!updatePanes	| p |	menuPanel delete.	self createMenuPanel.	toolbarPanel delete.	self createToolbar.	viewModeButtonsPanel delete.	self createViewModeButtonsPanel.	stageButtonsPanel delete.	self createStageButtonsPanel.	"titlePane addMorph: stageButtonsPanel."	"scriptsPane tabPane delete.	scriptsPane createTabPane."	readoutPane delete.	self createReadoutPane.	workPane sensorBoard owner		ifNil: [p _ nil]		ifNotNil: [p _ workPane sensorBoard position].	workPane sensorBoard addReadouts.	p ifNotNil:[		self showSensorBoard.		workPane sensorBoard position: p].	libraryPane clearLibrary.	self scratchWatchers do: [:w | w languageChanged].	self listWatchers do: [:w | w fixLayoutForNewLanguage].	World startSteppingSubmorphsOf: self.	self fixLayout.	scriptsPane fixLayout.	self updateViewModeButtons.! !!ScratchFrameMorph methodsFor: 'microwitch'!viewBlocksAndScriptsFor: aScriptableScratchMorph	| editor viewer |	aScriptableScratchMorph isClone ifTrue: [^ self].	editor := self scriptsPane.	viewer := self viewerPane.	self view: aScriptableScratchMorph tab: editor currentTab category: viewer currentCategory.	aScriptableScratchMorph world ifNotNil: [		aScriptableScratchMorph zoomRectFrom: aScriptableScratchMorph bounds to: editor bounds].! !!ScratchScriptEditorMorph methodsFor: 'initialization'!initialize	super initialize.	self		initFrontFromForm: (ScratchFrameMorph skinAt: #spriteLibraryPaneFrameTransparent2)		topSectionHeight: 90.	self middleBarLeftMargin: 0 rightMargin: 6.	self color: (Color r: (149/255) g: (154/255) b: (159/255)).	thumbnailMorph _ self createThumbnailMorph.	self addMorph: (thumbnailMorph position: self position + (37@16)).	self addGoButton.	self addStopButton.	pageViewerMorph _ ScrollFrameMorph2 new		growthFraction: 0.1;		color: ScratchFrameMorph scriptsPaneColor.	self addMorph: (pageViewerMorph position: (self left @ (self top + topSectionHeight))).	readoutMorphs _ #().	self target: nil.	thumbnailMorph extent: 50@50.	self extent: 300@400.	self currentTab: 'Scripts'.! !!ScratchScriptEditorMorph methodsFor: 'accessing' stamp: 'EiichiroIto 4/30/2023 17:28'!currentTab	^ currentTab! !!ScratchScriptEditorMorph methodsFor: 'accessing'!currentTab: anObject	currentTab := anObject.	self currentCategory: anObject! !!ScratchScriptEditorMorph methodsFor: 'accessing'!target	^ target! !!ScratchScriptEditorMorph methodsFor: 'accessing'!target: aScratchObjectOrNil	"Start viewing the given object or no object."	| sFrame |	World activeHand newKeyboardFocus: nil.	(aScratchObjectOrNil isNil or:	 [aScratchObjectOrNil isScriptable not]) ifTrue: [		target := nil.		pageViewerMorph contents: (Morph new color: Color red).		(sFrame _ self ownerThatIsA: ScratchFrameMorph) ifNotNil: [			sFrame viewerPane target: nil].		self showOrHideReadouts.		^ self].	target := aScratchObjectOrNil.	self showOrHideReadouts.	self fixLayout.! !!ScratchScriptEditorMorph methodsFor: 'drawing'!drawSubmorphsOn: aCanvas	"Display submorphs back to front."	submorphs reverseDo: [:m |		aCanvas fullDrawMorph: m]! !!ScratchScriptEditorMorph methodsFor: 'event handling'!mouseEnterDragging: evt	"Switch the tabs to script if a block is current being dragged"	(currentCategory = 'Scripts') ifFalse:[		self currentCategory: 'Scripts'.		self currentTab: 'Scripts'].! !!ScratchScriptEditorMorph methodsFor: 'geometry'!fixLayout	| p x y h lines gap |	goButton position: thumbnailMorph right + 10 @ (thumbnailMorph top + (thumbnailMorph height - stopButton height / 2)).	stopButton position: (goButton right + 10) @ goButton top.	p := (stopButton right + 10) @ (thumbnailMorph top).	"layout readout morphs"	readoutMorphs size > 0		ifTrue: 			[lines _ readoutMorphs size // 2.			h _ readoutMorphs inject: 0 into: [:prev :each | prev max: each height].			gap _ thumbnailMorph height - (lines * h) // (lines + 1).			x _ p x.			y _ p y + gap.			readoutMorphs				pairsDo: 					[:m1 :m2 | 					m1 position: p x @ y.					m2 top: y.					y _ y + h + gap.					x _ x max: m1 right].			x _ x + 10.			readoutMorphs pairsDo: [:m1 :m2 | m2 left: x]].	"place tab morph"	readoutMorphs size > 1 ifTrue: [topSectionHeight _ thumbnailMorph height + 25].	"place scripts scroll pane"	pageViewerMorph position: self left @ (self top + topSectionHeight).	self extent: self extent! !!ScratchScriptEditorMorph methodsFor: 'private'!createThumbnailMorph	^ (ToggleButton onForm: (ScratchFrameMorph skinAt: #connected)		offForm: (ScratchFrameMorph skinAt: #disconnected)) label: '' font: (ScratchFrameMorph getFont: #Button);	 toggleMode: false;	 actionSelector: #thumbnailClicked;	 actWhen: #buttonUp;	 target: self;	 extent: 50 @ 50;	 yourself! !!ScriptableScratchMorph methodsFor: 'blocks'!viewBlocksAndScripts	| sFrame editor viewer |	self isClone ifTrue: [^ self].	(sFrame _ self ownerThatIsA: ScratchFrameMorph) ifNil: [^ self].	editor _ sFrame scriptsPane.	viewer _ sFrame viewerPane.	sFrame view: self tab: editor currentTab category: viewer currentCategory.	self world ifNotNil: [		self zoomRectFrom: self bounds to: editor bounds].! !ScratchScriptEditorMorph removeSelector: #addNameBox!ScratchScriptEditorMorph removeSelector: #createTabPane!ScratchScriptEditorMorph removeSelector: #getTabTop!ScratchScriptEditorMorph removeSelector: #tabPane!DividedImageFrameMorph subclass: #ScratchScriptEditorMorph	instanceVariableNames: 'thumbnailMorph pageViewerMorph readoutMorphs currentCategory goButton stopButton currentTab target '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-UI-Panes'!