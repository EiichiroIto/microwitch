'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 29 March 2021 at 12:52:35 pm'!!EventTitleMorph methodsFor: 'event handling'!presentMenu	"Pop up a menu of choices."	| eventNames sFrame menu choice |	eventNames := #().	(sFrame := self ownerThatIsA: ScratchFrameMorph) ifNotNil: [eventNames _ sFrame workPane allEventNames].	menu := CustomMenu new.	eventNames do: [:n | menu add: n action: n asString].	menu addLine.	menu add: 'new' localized , ScratchTranslator ellipsesSuffix action: #newEvent.	(choice := menu startUp) ifNil: [^ self].	choice == #newEvent ifTrue: [^ self addSubroutine].	self eventName: choice! !!ScriptableScratchMorph methodsFor: 'list ops'!createListNamed: aString 	| list stage n listName |	listName := aString asMicroPythonIdentifier.	listName isEmpty ifTrue: [^ self].	listName first isDigit ifTrue: [listName := 'v' , listName].	listName size > 25 ifTrue: [^ DialogBoxMorph warn: 'too long name'].	(self variableNameInUse: listName)		ifTrue: 			[self beep.			DialogBoxMorph warn: 'That variable name is already in use'.			^ self].	lists at: listName put: (list := ScratchListMorph new listName: listName target: self).	(stage := self ownerThatIsA: ScratchStageMorph)		ifNotNil: 			[n := (stage submorphs select: [:m | m isKindOf: ScratchListMorph]) size.			stage addMorph: (list position: stage topRight - (list width + 10 @ 0) + (0 @ (10 + (20 * n)))).			list startStepping]! !!ScriptableScratchMorph methodsFor: 'variables'!addGlobalVariable	"Ask the user for a variable name, then add a background (global)  	variable of that name."	| sFrame varName |	(sFrame := self ownerThatIsA: ScratchFrameMorph) ifNil: [^ self beep].	sFrame closeMediaEditorsAndDialogs.	varName := StringDialog ask: 'Variable name?'.	varName := varName asMicroPythonIdentifier.	varName isEmpty ifTrue: [^ self].	varName first isDigit ifTrue: [varName := 'v' , varName].	varName size > 25 ifTrue: [^ DialogBoxMorph warn: 'too long name'].	varName := varName asUTF8.	(sFrame workPane variableNameInUse: varName)		ifTrue: 			[self beep.			DialogBoxMorph warn: 'That variable name is already in use'.			^ self].	sFrame workPane addVariable: varName.	sFrame viewerPane categoryChanged: 'variables'.	self addWatcherForNewVariable: varName withScope: sFrame workPane! !!String methodsFor: 'microwitch'!asMicroPythonIdentifier	| s |	s := WriteStream on: self class new.	self do: [:each | each isAlphaNumeric ifTrue: [s nextPut: each]].	^ s contents! !