'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 16 October 2018 at 7:46:48 pm'!!CommandBlockMorph methodsFor: 'private' stamp: 'EiichiroIto 10/15/2018 14:46'!uncoloredArgMorphFor: specString	"Answer an argument morph for the given argument specification string."	| code |	code := specString at: 2.	$a = code ifTrue: [^ AttributeArgMorph new choice: 'volume'].	$b = code ifTrue: [^ BooleanArgMorph new].	$c = code ifTrue: [^ ColorArgMorph new showPalette: true].	$C = code ifTrue: [^ LedArgMorph new].	$d = code ifTrue: [^ ExpressionArgMorphWithMenu new numExpression: '0'; menuSelector: #directionMenu].	$D = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #ledClockNames].	$e = code ifTrue: [^ EventTitleMorph new].	$f = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #mathFunctionNames; choice: 'sqrt'].	$g = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #ledSymbolNames].	$H = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #sensorNames].	$h = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #hookupBooleanSensorNames].	$I = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #ledArrowNames].	$i = code ifTrue: [^ ExpressionArgMorphWithMenu new numExpression: '0'; menuSelector: #listIndexMenu].	$j = code ifTrue: [^ ExpressionArgMorphWithMenu new numExpression: '0'; menuSelector: #ioPinMenu].	$k = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #neoPixelPinNames].	$L = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #listVarMenu].	$l = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #ledCharacterNames].	$m = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #gestureNames].	$M = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #buttonNames].	$n = code ifTrue: [^ ExpressionArgMorph new numExpression: '10'].	$N = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #musicNames].	$s = code ifTrue: [^ ExpressionArgMorph new stringExpression: ''].	$S = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #ledShapeNames].	$v = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #varNamesMenu; choice: ''].	$W = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #motorDirection].	$x = code ifTrue: [^ ChoiceArgMorph new getOptionsSelector: #shiftDirection].	$y = code ifTrue: [^ ExpressionArgMorphWithMenu new numExpression: '0'; menuSelector: #listIndexForDeleteMenu].	^ ExpressionArgMorph new numExpression: '10'! !!MicrobitCode methodsFor: 'io blocks' stamp: 'EiichiroIto 10/15/2018 14:46'!setServomsecminmax: aMorph	| args str |	args := aMorph blockArgs.	self generatePin: args first.	stream nextPutAll: '.set_analog_period('.	str := args second argString: generator.	stream nextPutAll: str.	stream nextPutAll: ')'.	stream lf.	stream nextPutAll: '(_smin,_smax)=('.	str := args third argString: generator.	stream nextPutAll: str.	stream nextPutAll: ','.	str := args fourth argString: generator.	stream nextPutAll: str.	stream nextPutAll: ')'.! !!MicrobitCode methodsFor: 'io blocks' stamp: 'EiichiroIto 10/15/2018 14:46'!writeServoto: aMorph	| args str |	args := aMorph blockArgs.	self generatePin: args first.	stream nextPutAll: '.write_analog(('.	str := args second argString: generator.	stream nextPutAll: str.	stream nextPutAll: '*(_smax-_smin)/180)+_smin)'.! !!MicrobitCode methodsFor: 'sensor blocks' stamp: 'EiichiroIto 10/16/2018 19:45'!isGesture: aMorph	^ 'microbit.accelerometer.is_gesture("', aMorph blockArgs first choice, '")'! !!MicrobitCode methodsFor: 'sensor blocks' stamp: 'EiichiroIto 10/16/2018 19:45'!wasGesture: aMorph	^ 'microbit.accelerometer.was_gesture("', aMorph blockArgs first choice, '")'! !!MicrobitSpriteMorph methodsFor: 'io blocks' stamp: 'EiichiroIto 10/14/2018 15:33'!ioPinMenu	| menu |	menu _ CustomMenu new.	(0 to: 16)		, #(19 20 ) do: [:s | menu add: s asString action: s].	menu localize.	^ menu! !!MicrobitSpriteMorph methodsFor: 'io blocks' stamp: 'EiichiroIto 10/15/2018 14:46'!setServo: pin msec: msec min: min max: max 	Transcript show: 'setServo: ';	 show: pin;	 show: ' msec: ';	 show: msec;	 show: ' min: ';	 show: min;	 show: ' max: ';	 show: max;	 cr! !!MicrobitSpriteMorph methodsFor: 'io blocks' stamp: 'EiichiroIto 10/15/2018 14:46'!writeServo: pin to: value 	Transcript show: 'writeServo: ';	 show: pin;	 show: ' to: ';	 show: value;	 cr! !!MicrobitSpriteMorph class methodsFor: 'block specs' stamp: 'EiichiroIto 10/15/2018 14:46'!ioBlocks	^ #(		'io'			('button %M is pressed'			b		buttonIsPressed:)			('button %M was pressed'		b		buttonWasPressed:)			('count of button %M pressed'		r		countOfButtonPressed:)			-			('digital read pin %n'				r		readDigital: 0)			('digital write pin %n to %n'	-		writeDigital:to: 0 0) 			('analog read pin %n'				r		readAnalog: 0)			('analog write pin %n to %n'	- 		writeAnalog:to: 0 0)			('analog set period pin %n to %n msec'	- setAnalogPeriod:msec: 0 500)			('pin %n is touched'					b		pinIsTouched: 0)			-			('servo write pin %j to %n degrees'		-		writeServo:to: 0 180)			('servo set pin %j %n msec %n to %n'	-		setServo:msec:min:max:	0	5	100	500)		'neoPixel'			('set %n to r %n g %n b %n of NeoPixel pin %k'		-		setNo:r:g:b:neoPixel: 0 255 255 255 '')			('show NeoPixel of pin %k'								-		showNeoPixel:)			('clear NeoPixel of pin %k'								-		clearNeoPixel:)		)! !